# Copyright 2023 CS Group
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-exporter.fullname" . }}
  labels:
{{ include "prometheus-exporter.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "prometheus-exporter.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "prometheus-exporter.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- if .Values.rbac.create }}
      serviceAccountName: {{ include "prometheus-exporter.fullname" . }}
    {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ . }}
    {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: metrics
          containerPort: {{ .Values.internalPort }}
          protocol: TCP
        {{- if or .Values.env .Values.envFromSecret }}
        env:
        {{- range $key, $value := .Values.env }}
        - name: {{ $key | quote }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $envFromSecret := .Values.envFromSecret }}
        - name: {{ $envFromSecret.name | quote }}
          valueFrom:
            secretKeyRef:
              name: {{ $envFromSecret.secret | quote }}
              key: {{ $envFromSecret.key | quote }}
        {{- end }}
        {{- end }}
        {{- if .Values.configs }}
        volumeMounts:
        {{- range $field := .Values.configs }}
        - name: {{ $field.name }}
          mountPath: {{ $field.path }}
          subPath: {{ base $field.path }}
        {{- end }}
        {{- end }}
        readinessProbe:
          httpGet:
            path: /metrics
            port: {{ .Values.internalPort }}
            resources:
        livenessProbe:
          httpGet:
            path: /metrics
            port: {{ .Values.internalPort }}   
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.configs }}
      volumes:
      {{- range $field := .Values.configs }}
      - name: {{ $field.name }}
        configMap:
          name: {{ include "prometheus-exporter.fullname" $ }}
          items:
          - key: {{ $field.name }}
            path: {{ base $field.path }}
      {{- end }}
      {{- end }}
