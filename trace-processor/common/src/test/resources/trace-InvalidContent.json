{
  "header": {
    "type": "REPORT",
    "timestamp": "2021-08-30T15:02:24.125000Z",
    "level": "INFO",
    "mission": "S3",
    "workflow": "NOMINAL"
  },

  "message": {
    "content": "Error processing of DCS_05_S2B_20220413132241026648_dat/ch_1/DCS_05_S2B_20220413132241026648_ch1_DSDB_00062.raw: java.lang.RuntimeException: File DCS_05_S2B_20220413132241026648_dat/ch_1/DCS_05_S2B_20220413132241026648_ch1_DSDB_00062.raw is already in obs and has the same size, aborting ingestion\\\\n\\\\tat esa.s1pdgs.cpoc.ingestion.worker.product.ProductServiceImpl.checkExistingInObs(ProductServiceImpl.java:97)\\\\n\\\\tat esa.s1pdgs.cpoc.ingestion.worker.product.ProductServiceImpl.ingest(ProductServiceImpl.java:65)\\\\n\\\\tat esa.s1pdgs.cpoc.ingestion.worker.service.IngestionWorkerService.identifyAndUpload(IngestionWorkerService.java:86)\\\\n\\\\tat esa.s1pdgs.cpoc.ingestion.worker.service.IngestionWorkerService.apply(IngestionWorkerService.java:69)\\\\n\\\\tat esa.s1pdgs.cpoc.ingestion.worker.service.IngestionWorkerService.apply(IngestionWorkerService.java:34)\\\\n\\\\tat org.springframework.cloud.function.context.catalog.SimpleFunctionRegistry$FunctionInvocationWrapper.invokeFunctionAndEnrichResultIfNecessary(SimpleFunctionRegistry.java:897)\\\\n\\\\tat org.springframework.cloud.function.context.catalog.SimpleFunctionRegistry$FunctionInvocationWrapper.invokeFunction(SimpleFunctionRegistry.java:853)\\\\n\\\\tat org.springframework.cloud.function.context.catalog.SimpleFunctionRegistry$FunctionInvocationWrapper.doApply(SimpleFunctionRegistry.java:708)\\\\n\\\\tat org.springframework.cloud.function.context.catalog.SimpleFunctionRegistry$FunctionInvocationWrapper.apply(SimpleFunctionRegistry.java:551)\\\\n\\\\tat org.springframework.cloud.stream.function.PartitionAwareFunctionWrapper.apply(PartitionAwareFunctionWrapper.java:84)\\\\n\\\\tat org.springframework.cloud.stream.function.FunctionConfiguration$FunctionWrapper.apply(FunctionConfiguration.java:790)\\\\n\\\\tat org.springframework.cloud.stream.function.FunctionConfiguration$FunctionToDestinationBinder$1.handleMessageInternal(FunctionConfiguration.java:622)\\\\n\\\\tat org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:56)\\\\n\\\\tat org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:115)\\\\n\\\\tat org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:133)\\\\n\\\\tat org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:106)\\\\n\\\\tat org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:72)\\\\n\\\\tat org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:317)\\\\n\\\\tat org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:272)\\\\n\\\\tat org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:187)\\\\n\\\\tat org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:166)\\\\n\\\\tat org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:47)\\\\n\\\\tat org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:109)\\\\n\\\\tat org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:216)\\\\n\\\\tat org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter.sendMessageIfAny(KafkaMessageDrivenChannelAdapter.java:397)\\\\n\\\\tat org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter.access$300(KafkaMessageDrivenChannelAdapter.java:83)\\\\n\\\\tat org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter$IntegrationRecordMessageListener.onMessage(KafkaMessageDrivenChannelAdapter.java:454)\\\\n\\\\tat org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter$IntegrationRecordMessageListener.onMessage(KafkaMessageDrivenChannelAdapter.java:428)\\\\n\\\\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.lambda$onMessage$0(RetryingMessageListenerAdapter.java:125)\\\\n\\\\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\\\\n\\\\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\\\\n\\\\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\\\\n\\\\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2629)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2609)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2536)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2427)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2305)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1979)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1364)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1355)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1247)\\\\n\\\\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\\\\n\\\\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\\\\n\\\\tat java.base/java.lang.Thread.run(Thread.java:829)\\\\n\\Error processing of DCS_05_S2B_20220413132241026648_dat/ch_1/DCS_05_S2B_20220413132241026648_ch1_DSDB_00062.raw: java.lang.RuntimeException: File DCS_05_S2B_20220413132241026648_dat/ch_1/DCS_05_S2B_20220413132241026648_ch1_DSDB_00062.raw is already in obs and has the same size, aborting ingestion\\\\n\\\\tat esa.s1pdgs.cpoc.ingestion.worker.product.ProductServiceImpl.checkExistingInObs(ProductServiceImpl.java:97)\\\\n\\\\tat esa.s1pdgs.cpoc.ingestion.worker.product.ProductServiceImpl.ingest(ProductServiceImpl.java:65)\\\\n\\\\tat esa.s1pdgs.cpoc.ingestion.worker.service.IngestionWorkerService.identifyAndUpload(IngestionWorkerService.java:86)\\\\n\\\\tat esa.s1pdgs.cpoc.ingestion.worker.service.IngestionWorkerService.apply(IngestionWorkerService.java:69)\\\\n\\\\tat esa.s1pdgs.cpoc.ingestion.worker.service.IngestionWorkerService.apply(IngestionWorkerService.java:34)\\\\n\\\\tat org.springframework.cloud.function.context.catalog.SimpleFunctionRegistry$FunctionInvocationWrapper.invokeFunctionAndEnrichResultIfNecessary(SimpleFunctionRegistry.java:897)\\\\n\\\\tat org.springframework.cloud.function.context.catalog.SimpleFunctionRegistry$FunctionInvocationWrapper.invokeFunction(SimpleFunctionRegistry.java:853)\\\\n\\\\tat org.springframework.cloud.function.context.catalog.SimpleFunctionRegistry$FunctionInvocationWrapper.doApply(SimpleFunctionRegistry.java:708)\\\\n\\\\tat org.springframework.cloud.function.context.catalog.SimpleFunctionRegistry$FunctionInvocationWrapper.apply(SimpleFunctionRegistry.java:551)\\\\n\\\\tat org.springframework.cloud.stream.function.PartitionAwareFunctionWrapper.apply(PartitionAwareFunctionWrapper.java:84)\\\\n\\\\tat org.springframework.cloud.stream.function.FunctionConfiguration$FunctionWrapper.apply(FunctionConfiguration.java:790)\\\\n\\\\tat org.springframework.cloud.stream.function.FunctionConfiguration$FunctionToDestinationBinder$1.handleMessageInternal(FunctionConfiguration.java:622)\\\\n\\\\tat org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:56)\\\\n\\\\tat org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:115)\\\\n\\\\tat org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:133)\\\\n\\\\tat org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:106)\\\\n\\\\tat org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:72)\\\\n\\\\tat org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:317)\\\\n\\\\tat org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:272)\\\\n\\\\tat org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:187)\\\\n\\\\tat org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:166)\\\\n\\\\tat org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:47)\\\\n\\\\tat org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:109)\\\\n\\\\tat org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:216)\\\\n\\\\tat org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter.sendMessageIfAny(KafkaMessageDrivenChannelAdapter.java:397)\\\\n\\\\tat org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter.access$300(KafkaMessageDrivenChannelAdapter.java:83)\\\\n\\\\tat org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter$IntegrationRecordMessageListener.onMessage(KafkaMessageDrivenChannelAdapter.java:454)\\\\n\\\\tat org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter$IntegrationRecordMessageListener.onMessage(KafkaMessageDrivenChannelAdapter.java:428)\\\\n\\\\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.lambda$onMessage$0(RetryingMessageListenerAdapter.java:125)\\\\n\\\\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\\\\n\\\\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\\\\n\\\\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\\\\n\\\\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2629)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2609)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2536)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2427)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2305)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1979)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1364)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1355)\\\\n\\\\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1247)\\\\n\\\\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\\\\n\\\\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\\\\n\\\\tat java.base/java.lang.Thread.run(Thread.java:829)\\\\n\\"
  },

  "task": {
    "uid": "4cb9fa49-2c0a-4363-82c3-ea9ab223c53a",
    "name": "CompressionProcessing",
    "event": "BEGIN",
    "input": {},
    "follows_from_task": "a66d3ac2-2483-4891-8151-1bc77e4296e8"
  }
}
