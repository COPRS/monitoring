name: Yarn CI for Grafana plugins

on:
  push:
    branches:
      - 'feature/**'
      - 'develop'
    paths:
      - 'grafana-monitoring/**'
      - '.github/workflows/yarn-grafana-plugins.yml'
  #pull_request:
  #  branches:
  #    - 'feature/**'
  #    - 'develop'
  #  paths:
  #    - 'grafana-monitoring/**'
  #    - '.github/workflows/yarn-grafana-plugins.yml'
  workflow_dispatch:

env:
  REGISTRY_USER: ${{ secrets.CS_ARTIFACTORY_USER }}
  REGISTRY_PWD: ${{ secrets.CS_ARTIFACTORY_PASSWORD }}
  REGISTRY_BASE: artifactory.coprs.esa-copernicus.eu
  REGISTRY_PROJECT: rs-zip

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [invalidations-completeness, invalidations-timeliness]

    steps:
      - uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          # TAG
          GIT_TAG=${GITHUB_REF/refs\/tags\//}
          echo "GIT_TAG=$GIT_TAG" >> $GITHUB_ENV
          # ZIP Name
          ZIP_NAME="${{ matrix.component }}_$GIT_TAG.zip"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
          # Test to be removed for final version
          ZIP_NAME="${{ matrix.component }}.zip"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '17.3.0'
          cache: 'yarn'
          cache-dependency-path: 'grafana-monitoring/grafana/plugins/${{ matrix.component }}'

      - name: Build grafana plugin
        run: |
          cd grafana-monitoring/grafana/plugins/${{ matrix.component }}
          yarn cache clean && yarn install && yarn cache clean && yarn add @grafana/toolkit@9.0.2 && yarn build

      - name: Remove node_modules
        run: |
          cd grafana-monitoring/grafana/plugins/${{ matrix.component }}
          rm -rf node_modules
      
      - name: Zip plugins
        run: |
          cd grafana-monitoring/grafana/plugins
          zip -qq -r ${ZIP_NAME} ${{ matrix.component }}

      - name: Upload zipped plugins in GH
        uses: actions/upload-artifact@master
        with:
          name: grafana-plugin-${{ matrix.component }}
          path: |
            grafana-monitoring/grafana/plugins/${ZIP_NAME}
      
      - name: Upload zipped plugins in Artifactory
        run: |
          cd grafana-monitoring/grafana/plugins
          curl -u "${REGISTRY_USER}:${REGISTRY_PWD}" -T "${ZIP_NAME}" -X PUT "https://${REGISTRY_BASE}/artifactory/${REGISTRY_PROJECT}/monitoring/${ZIP_NAME}"